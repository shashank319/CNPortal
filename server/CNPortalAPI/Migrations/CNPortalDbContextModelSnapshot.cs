// <auto-generated />
using System;
using CNPortalAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CNPortalAPI.Migrations
{
    [DbContext(typeof(CNPortalDbContext))]
    partial class CNPortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CNPortalAPI.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateID"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmployerID")
                        .HasColumnType("int");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("HourlyRate")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Resume")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Skills")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CandidateID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployerID");

                    b.ToTable("Candidate", (string)null);
                });

            modelBuilder.Entity("CNPortalAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("FirstTimeFlag")
                        .HasColumnType("bit");

                    b.Property<int>("IdentityID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdentityID");

                    b.HasIndex("VendorID");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            CompanyName = "Tech Solutions Inc",
                            Email = "employee1@company.com",
                            FirstName = "John",
                            FirstTimeFlag = false,
                            IdentityID = 1,
                            LastName = "Doe",
                            PasswordHash = "$2a$11$J9FqGRgOKv3KqF7tF1EHQOyE.n3aV8VsJCJQXY9/8jGF4JGFVqJ8i",
                            Status = "Active"
                        },
                        new
                        {
                            EmployeeID = 2,
                            CompanyName = "Creative Design LLC",
                            Email = "employee2@company.com",
                            FirstName = "Jane",
                            FirstTimeFlag = false,
                            IdentityID = 1,
                            LastName = "Smith",
                            PasswordHash = "$2a$11$J9FqGRgOKv3KqF7tF1EHQOyE.n3aV8VsJCJQXY9/8jGF4JGFVqJ8i",
                            Status = "Active"
                        },
                        new
                        {
                            EmployeeID = 3,
                            CompanyName = "Management Corp",
                            Email = "employer1@company.com",
                            FirstName = "Mike",
                            FirstTimeFlag = false,
                            IdentityID = 2,
                            LastName = "Johnson",
                            PasswordHash = "$2a$11$J9FqGRgOKv3KqF7tF1EHQOyE.n3aV8VsJCJQXY9/8jGF4JGFVqJ8i",
                            Status = "Active"
                        },
                        new
                        {
                            EmployeeID = 4,
                            CompanyName = "Business Solutions",
                            Email = "employer2@company.com",
                            FirstName = "Sarah",
                            FirstTimeFlag = false,
                            IdentityID = 3,
                            LastName = "Wilson",
                            PasswordHash = "$2a$11$J9FqGRgOKv3KqF7tF1EHQOyE.n3aV8VsJCJQXY9/8jGF4JGFVqJ8i",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("CNPortalAPI.Models.EveryDayTimesheet", b =>
                {
                    b.Property<int>("TimesheetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimesheetID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<decimal>("HoursWorked")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("IndexID")
                        .HasColumnType("int");

                    b.HasKey("TimesheetID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("IndexID");

                    b.ToTable("EveryDayTimesheet", (string)null);
                });

            modelBuilder.Entity("CNPortalAPI.Models.Identity", b =>
                {
                    b.Property<int>("IdentityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdentityID"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdentityID");

                    b.ToTable("Identity", (string)null);

                    b.HasData(
                        new
                        {
                            IdentityID = 1,
                            Role = "Emp"
                        },
                        new
                        {
                            IdentityID = 2,
                            Role = "Admin"
                        },
                        new
                        {
                            IdentityID = 3,
                            Role = "Manager"
                        },
                        new
                        {
                            IdentityID = 4,
                            Role = "Client"
                        });
                });

            modelBuilder.Entity("CNPortalAPI.Models.MasterTimeSheet", b =>
                {
                    b.Property<int>("IndexID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndexID"));

                    b.Property<bool>("ApprovalL1")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprovalL2")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovedL1Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovedL2Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("PeriodType")
                        .HasColumnType("int");

                    b.Property<decimal>("RatePerHour")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StorageAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalHoursWorked")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<int?>("WeekNumber")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("IndexID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("VendorID");

                    b.ToTable("MasterTimeSheet", (string)null);
                });

            modelBuilder.Entity("CNPortalAPI.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<decimal>("RatePerHour")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VendorID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Vendor", (string)null);

                    b.HasData(
                        new
                        {
                            VendorID = 1,
                            EmployeeID = 1,
                            RatePerHour = 45.00m,
                            VendorName = "John Doe Consulting"
                        },
                        new
                        {
                            VendorID = 2,
                            EmployeeID = 2,
                            RatePerHour = 50.00m,
                            VendorName = "Jane Smith Design"
                        },
                        new
                        {
                            VendorID = 3,
                            EmployeeID = 3,
                            RatePerHour = 75.00m,
                            VendorName = "Mike Johnson Management"
                        },
                        new
                        {
                            VendorID = 4,
                            EmployeeID = 4,
                            RatePerHour = 65.00m,
                            VendorName = "Sarah Wilson Business"
                        });
                });

            modelBuilder.Entity("CNPortalAPI.Models.Candidate", b =>
                {
                    b.HasOne("CNPortalAPI.Models.Employee", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("CNPortalAPI.Models.Employee", b =>
                {
                    b.HasOne("CNPortalAPI.Models.Identity", "Identity")
                        .WithMany("Employees")
                        .HasForeignKey("IdentityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CNPortalAPI.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Identity");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("CNPortalAPI.Models.EveryDayTimesheet", b =>
                {
                    b.HasOne("CNPortalAPI.Models.Employee", "Employee")
                        .WithMany("EveryDayTimesheets")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CNPortalAPI.Models.MasterTimeSheet", "MasterTimeSheet")
                        .WithMany("EveryDayTimesheets")
                        .HasForeignKey("IndexID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Employee");

                    b.Navigation("MasterTimeSheet");
                });

            modelBuilder.Entity("CNPortalAPI.Models.MasterTimeSheet", b =>
                {
                    b.HasOne("CNPortalAPI.Models.Employee", "Employee")
                        .WithMany("MasterTimeSheets")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CNPortalAPI.Models.Vendor", "Vendor")
                        .WithMany("MasterTimeSheets")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("CNPortalAPI.Models.Vendor", b =>
                {
                    b.HasOne("CNPortalAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CNPortalAPI.Models.Employee", b =>
                {
                    b.Navigation("EveryDayTimesheets");

                    b.Navigation("MasterTimeSheets");
                });

            modelBuilder.Entity("CNPortalAPI.Models.Identity", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CNPortalAPI.Models.MasterTimeSheet", b =>
                {
                    b.Navigation("EveryDayTimesheets");
                });

            modelBuilder.Entity("CNPortalAPI.Models.Vendor", b =>
                {
                    b.Navigation("MasterTimeSheets");
                });
#pragma warning restore 612, 618
        }
    }
}
